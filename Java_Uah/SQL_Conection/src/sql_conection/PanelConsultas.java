/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sql_conection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.Instant;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class PanelConsultas extends javax.swing.JFrame {

   
    String user,pass;

    public PanelConsultas(String user, String pass) {
        this.user = user;
        this.pass = pass;
        initComponents();
    }

    public String getUser() {
        return user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    public String getPass() {
        return pass;
    }

    public void setPass(String pass) {
        this.pass = pass;
    }
    
    
   

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelSubTitulo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        labelSubTitulo1 = new javax.swing.JLabel();
        jComboBoxOpcion = new javax.swing.JComboBox<>();
        labelCorreo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        labelSubTitulo.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        labelSubTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelSubTitulo.setText("MENU CONSULTAS");
        labelSubTitulo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelSubTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSubTituloMouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        labelSubTitulo1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        labelSubTitulo1.setForeground(new java.awt.Color(255, 255, 255));
        labelSubTitulo1.setText("MENU CONSULTAS");
        labelSubTitulo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelSubTitulo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSubTitulo1MouseClicked(evt);
            }
        });

        jComboBoxOpcion.setFont(new java.awt.Font("Geneva", 0, 22)); // NOI18N
        jComboBoxOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", " ", " ", " ", " " }));

        labelCorreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelCorreo.setForeground(new java.awt.Color(255, 255, 255));
        labelCorreo.setText("Consulta:");

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setText("Resultado");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(labelSubTitulo1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(labelCorreo)
                        .addGap(14, 14, 14)
                        .addComponent(jComboBoxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labelSubTitulo1)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(labelCorreo))
                            .addComponent(jComboBoxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelSubTituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSubTituloMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_labelSubTituloMouseClicked

    private void labelSubTitulo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSubTitulo1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_labelSubTitulo1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       try {
           
            //REALIZO LA CONEXXION CON LA BASE DE DATOS ยก
            Class.forName("org.postgresql.Driver");
            Connection connection = null;
            connection = DriverManager.getConnection("jdbc:postgresql://localhost/baseDePrueba",this.user, this.pass);//Paso la base de datos y los parametros exigidos.
            Statement st = connection.createStatement();
            System.out.println("Conexion establecida");

            ResultSet rs;

            int opcion = jComboBoxOpcion.getSelectedIndex();
            
            
            switch (opcion) {
                case 0://CONSULTA 1
                
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Nombre");
                modelo.addColumn("Calle");
                modelo.addColumn("Numero");
                modelo.addColumn("CodPostal");
                modelo.addColumn("Ciudad");
                modelo.addColumn("Provinvia");
                jTable1.setModel(modelo);
                ResultSet rs2;
                try{
                  rs2 = st.executeQuery("select nombre ,calle,numero,\"codPostal\",ciudad,provincia from \"Usuarios\"");
                String datos[] = new String[6];
                
                while(rs2.next()){
                   datos [0] = rs2.getString("nombre");//Coge la primera fila
                   datos [1] = rs2.getString("calle");
                  int numero = Integer.parseInt(rs2.getString("numero"));
                  int codigoPos = Integer.parseInt(rs2.getString("codPostal"));
                  datos[2] = Integer.toString(numero);
                  datos[3] = Integer.toString(codigoPos);
                   datos [4] = rs2.getString("ciudad");
                   datos [5]= rs2.getString("provincia");

                    modelo.addRow(datos);  
                }
                }catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                

                   
                
                 break;
                case 1: //CONSULTA 2
                DefaultTableModel modelo1 = new DefaultTableModel();
                modelo1.addColumn("Titulo");
                modelo1.addColumn("Duracion");    
                jTable1.setModel(modelo1);    
                ResultSet rs3;
                try{
                    rs3 = st.executeQuery("select titulo,duracion\n" +
                    "from \"Contenidos\" natural inner join \"Peliculas\" \n" +
                    "where titulo like '%Star%'");
                String datos[] = new String[2];
                while(rs3.next()){
                    datos[0]  = rs3.getString("titulo");
                    int duracion = Integer.parseInt(rs3.getString("duracion"));
                    datos[1] = Integer.toString(duracion);
                     modelo1.addRow(datos);
                    
                }   
                }catch(Exception e){
                        System.out.println(e.getMessage());
                        }
               

                    
                
                 break;
                case 2: //CONSULTA 3
                DefaultTableModel modelo2 = new DefaultTableModel();
                modelo2.addColumn("IBAN");
                modelo2.addColumn("tCantidad");
                modelo2.addColumn("Numero de pag");
                modelo2.addColumn("Id");
                modelo2.addColumn("fPago");
                jTable1.setModel(modelo2);
                ResultSet rs4;
                
                
                try{
                    rs4 = st.executeQuery("select * from pagos where \"fPago\" = '21/09/2021'");
                    String datos[] = new String[5];
                   while(rs4.next()){
                    datos [0]= rs4.getString("IBAN");
                    int cantidad = Integer.parseInt(rs4.getString("cantidad"));
                    datos [1] = Integer.toString(cantidad);
                    int numPago = Integer.parseInt(rs4.getString("numPago"));
                    datos [2] = Integer.toString(numPago);
                    datos [3] = rs4.getString("Id");
                    java.util.Date fecha = rs4.getDate("fPago");
                   // datos[4] = Date.from(Instant.MIN)
                    //fpago = rs4.getDate("fPago");
                    //   String fechaStr = (new SimpleDateFormat("dd/MM/yyyy")).format("fpago");
                    modelo2.addRow(datos);
                    
                    
                } 
                }catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;

                case 3://CONSULTA 4
                DefaultTableModel modelo3 = new DefaultTableModel();
                modelo3.addColumn("Cantidad Total");
              
                jTable1.setModel(modelo3);
                ResultSet rs5;
               
                try{
                rs5 = st.executeQuery("select sum(cantidad) as total from pagos");
                 String datos[] = new String[1];
               
                while(rs5.next()){

                    int canTotal = rs5.getInt("total");
                    datos[0] = Integer.toString(canTotal);

                    modelo3.addRow(datos);
                  
                }
                    
                
                }catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                  break;

                case 4://CONSULTA 5
                DefaultTableModel modelo4 = new DefaultTableModel();
                modelo4.addColumn("Modalidad");
              
                jTable1.setModel(modelo4);
                ResultSet rs6;
                try{
                    rs6 = st.executeQuery("select modalidad\n" +
                    "from \"Usuarios\"\n" +
                    "group by modalidad order by count(modalidad)  desc limit 1");
                    
                 String datos[] = new String[1];
                while(rs6.next()){

                   datos[0] =  rs6.getString("modalidad");
                    modelo4.addRow(datos); 

                  
                    
                
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                
                break;

                case 5: //CONSULTA 6 
                    DefaultTableModel modelo5 = new DefaultTableModel();
                modelo5.addColumn("Id Perfil");
                 modelo5.addColumn("Mas Visiona");
              
                jTable1.setModel(modelo5);
                ResultSet rs7;
                try{
                    rs7 = st.executeQuery("select \"IdPerfil\", count(\"IdPerfil\") as Mas_visiona\n" +
                    "from  \"Visiona\",\"Peliculas\"\n" +
                    "where \"Visiona\".id = \"Peliculas\".id_contenidos\n" +
                    "group by \"IdPerfil\" order by Mas_visiona desc limit 1");

                String datos[] = new String[2];
                while(rs7.next()){

                    datos[0]= rs7.getString("IdPerfil");
                    int visiona = rs7.getInt("Mas_visiona");
                    datos[1] = Integer.toString(visiona);
                    modelo5.addRow(datos); 
                    
                    
                
                } }catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;

                case 6: //CONSULTA 7
                DefaultTableModel modelo6 = new DefaultTableModel();
                modelo6.addColumn("Id Perfil");
                modelo6.addColumn("Mas Visiona");
              
                jTable1.setModel(modelo6);
                ResultSet rs8;
                try{
                    rs8 = st.executeQuery("select \"IdPerfil\", count(\"IdPerfil\") as Mas_visiona\n" +
                    "from  \"Visiona\",\"Capitulos\"\n" +
                    "where  \"Visiona\".id = \"Capitulos\".id_contenidos\n" +
                    "group by \"IdPerfil\" order by Mas_visiona desc limit 1");

                String datos[] = new String[2];
                while(rs8.next()){

                    datos[0]= rs8.getString("IdPerfil");
                    int visiona = rs8.getInt("Mas_visiona");
                    datos[1] = Integer.toString(visiona);
                    modelo6.addRow(datos); 
                    
                    
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                    
                
                break;

                case 7:
                //CONSULTA 8
                DefaultTableModel modelo7 = new DefaultTableModel();
                modelo7.addColumn("Id");
                modelo7.addColumn("Puntuacion");
              
                jTable1.setModel(modelo7);

                ResultSet rs9;
                try{
                    rs9 = st.executeQuery("select id,\"Valora\".puntuacion\n" +
                    "from accede natural inner join \"Contenidos\" natural inner join \"Peliculas\" natural inner join \"Valora\"\n" +
                    "where accede.id = \"Contenidos\".id_contenidos and \"Contenidos\".id_contenidos = \"Peliculas\".id_contenidos and \n" +
                    "\"Contenidos\".id_contenidos = \"Valora\".id and accede.modalidad = 'premium'\n" +
                    "order by \"Valora\".puntuacion desc,id");

                 String datos[] = new String[2];
                while(rs9.next()){

                   datos[0]= rs9.getString("id");
                    int puntuacion = Integer.parseInt(rs9.getString("puntuacion"));
                     datos[1] = Integer.toString(puntuacion);
                    modelo7.addRow(datos); 
                    
                   
                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                 break;
                
                case 8: //CONSULTA 9
                DefaultTableModel modelo8 = new DefaultTableModel();
                modelo8.addColumn("Numero Pagos");
                modelo8.addColumn("Cantidad");
                modelo8.addColumn("Id Usuario");
                modelo8.addColumn("Modalidad");
              
                jTable1.setModel(modelo8);
                ResultSet rs10;
                try{
                    rs10 = st.executeQuery("select pagos.\"numPago\",pagos.cantidad,\"Usuarios\".\"Id\",\"Usuarios\".modalidad\n" +
                    "from \"Usuarios\" , pagos \n" +
                    "where \"Usuarios\".\"Id\" = pagos.\"Id\" and pagos.\"fPago\"  BETWEEN '01/09/2021' and '30/09/2021'");

                String datos[] = new String[4];
                while(rs10.next()){

                    int cantidadx = Integer.parseInt(rs10.getString("cantidad"));
                     datos[0] = Integer.toString(cantidadx);
                    int numPagox = Integer.parseInt(rs10.getString("numPago"));
                     datos[1] = Integer.toString(numPagox);
                    datos[2] =  rs10.getString("Id");
                    datos[3] = rs10.getString("modalidad");

                    modelo8.addRow(datos);
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                    
                
                break;

                case 9: //CONSULTA 10
                DefaultTableModel modelo9 = new DefaultTableModel();
                modelo9.addColumn("Telefono");
                
              
                jTable1.setModel(modelo9);
                

                ResultSet rs11;
                try{
                    rs11 = st.executeQuery("select \"Usuarios\".telefono\n" +
                    "from \"Usuarios\", \"Valora\"\n" +
                    "where \"Usuarios\".\"Id\" = \"Valora\".\"IdPerfil\"\n" +
                    "group by  \"Usuarios\".telefono , \"Valora\".puntuacion order by \"Valora\".puntuacion limit 1");

                String datos[] = new String[1];
                while(rs11.next()){

                    datos[0] = rs11.getString("telefono");
                    modelo9.addRow(datos);

                   
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                
                break;

                case 10: //CONSULTA 11
                //ID Contenidos  	Sinopsis  		Titulo 		Fecha de lanzamiento 		Duracion
                DefaultTableModel modelo10 = new DefaultTableModel();
                modelo10.addColumn("ID Contenidos");
                modelo10.addColumn("Sinopsis");
                modelo10.addColumn("Titulo");
                modelo10.addColumn("Fecha de lanzamiento");
                modelo10.addColumn("Duracion");
                
                jTable1.setModel(modelo10);
                ResultSet rs12;
                try{
                    rs12 = st.executeQuery("select \"Contenidos\".*\n" +
                    " from \"Contenidos\" , \"Visiona\"\n" +
                    " where  \"Visiona\".id = \"Contenidos\".id_contenidos and \"Visiona\".\"IdPerfil\" not like 'idUsuario002'\n" +
                    " order by \"Contenidos\".id_contenidos ");
                String datos[] = new String[5];
                while(rs12.next()){
                    datos[2] = rs12.getString("titulo");
                    int duracion = Integer.parseInt(rs12.getString("duracion"));
                    datos[4] = Integer.toString(duracion);
                    datos[0] = rs12.getString("id_contenidos");
                    datos[1]= rs12.getString("sinopsis");
                    java.util.Date fecha = rs12.getDate("fechaLanzamiento");
                    
                   modelo10.addRow(datos);
                    
                    
                
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;
                case 11:  //CONSULTA 12
                DefaultTableModel modelo11 = new DefaultTableModel();
                modelo11.addColumn("Modalidad");
                jTable1.setModel(modelo11);

                ResultSet rs13;
                try{
                     rs13 = st.executeQuery(" select accede.modalidad\n" +
                    "from accede,\"Peliculas\" \n" +
                    " where accede.id = \"Peliculas\".id_contenidos\n" +
                    " group by accede.modalidad order by count(accede.modalidad) desc limit 1");

                String datos[] = new String[1];
                while(rs13.next()){

                    datos[0]= rs13.getString("modalidad");
                     modelo11.addRow(datos);
                    
                    
                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
               
                break;
                case 12: //CONSULTA 13
                
                DefaultTableModel modelo12 = new DefaultTableModel();
                modelo12.addColumn("Modalidad");
                modelo12.addColumn("Total Visto");
                jTable1.setModel(modelo12);


                ResultSet rs14;
                try{
                    rs14 = st.executeQuery("select   modalidad , count(modalidad) as total\n" +
                    "from \"Usuarios\"\n" +
                    "group by modalidad");
                String datos[] = new String[2];
                while(rs14.next()){

                    datos[0] = rs14.getString("modalidad");
                    int total = rs14.getInt("total");
                    datos[1] = Integer.toString(total);
                     modelo12.addRow(datos);

                    
                    
                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;
                case 13: //CONSULTA 14
                DefaultTableModel modelo13 = new DefaultTableModel();
                modelo13.addColumn("Mail");
                 jTable1.setModel(modelo13);

                ResultSet rs15;
                try{
                     rs15 = st.executeQuery("select mail \n" +
                    "from  \"Usuarios\" , \"Valora\"\n" +
                    "where \"Usuarios\".\"Id\" = \"Valora\".\"IdPerfil\"\n" +
                    "group by mail order by  max(\"Valora\".fecha) desc limit 1");

                String datos[] = new String[1];
                while(rs15.next()){

                    datos[0] = rs15.getString("mail");
                    modelo13.addRow(datos);
                    
                   
                
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
               
                break;
                case 14://CONSULTA 15
                DefaultTableModel modelo14 = new DefaultTableModel();
                modelo14.addColumn("ID Contenidos");
                modelo14.addColumn("Sinopsis");
                modelo14.addColumn("Titulo");
                modelo14.addColumn("Fecha de lanzamiento");
                modelo14.addColumn("Duracion");
                
                jTable1.setModel(modelo14);

                ResultSet rs16;
                try{
                    rs16 = st.executeQuery(" select \"Contenidos\".*\n" +
                    " from \"Contenidos\" inner join \"Visiona\" on \"Visiona\".id = \"Contenidos\".id_contenidos\n" +
                    " where  \"Visiona\".\"IdPerfil\" = 'idUsuario002'\n" +
                    " order by \"Contenidos\".\"fechaLanzamiento\" desc");

                String datos[] = new String[5];
                while(rs16.next()){
                   datos[0]=   rs16.getString("id_contenidos");
                   datos[1]= rs16.getString("sinopsis");
                   datos[2] = rs16.getString("titulo");
                    java.util.Date fecha = rs16.getDate("fechaLanzamiento");
                    int duracion = Integer.parseInt(rs16.getString("duracion"));
                    datos[4]= Integer.toString(duracion);
                    
                     modelo14.addRow(datos);
                    
                    


                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;
                case 15: //CONSULTA 16
                DefaultTableModel modelo15 = new DefaultTableModel();
                modelo15.addColumn("ID Contenido");
                 jTable1.setModel(modelo15);
                ResultSet rs17;
                try{
                  rs17 = st.executeQuery("select id \n" +
                    "from \"Recomendado\", \"Capitulos\" \n" +
                    "where \"Recomendado\".id = \"Capitulos\".id_contenidos and \"Recomendado\".\"IdPerfil\" = 'idUsuario002'\n" +
                    "group by id \n" +
                    "order by count( \"Capitulos\".id_capitulo) ");

                String datos[] = new String[1];
                while(rs17.next()){

                    datos[0] = rs17.getString("id");
                        modelo15.addRow(datos);
                    
                    
                  
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                        }
                
                break;
                case 16:  //CONSULTA 17
                DefaultTableModel modelo16 = new DefaultTableModel();
                modelo16.addColumn("Nickname");
                modelo16.addColumn("Numero de veces vista");
                jTable1.setModel(modelo16);

                ResultSet rs18;
                try{
                           
                rs18 = st.executeQuery("select \"Visiona\".nickname,count(\"Visiona\".id) as NumeroDeVisitasPelis\n" +
                    "from \"Visiona\",\"Peliculas\"\n" +
                    "where  \"Visiona\".id =\"Peliculas\".id_contenidos    and\n" +
                    "\"Visiona\".\"IdPerfil\" = 'idUsuario001'\n" +
                    "group by \"Visiona\".nickname ");
                String datos[] = new String[2];
                while(rs18.next()){

                    datos[0] = rs18.getString("nickname");
                    int total = rs18.getInt("NumeroDeVisitasPelis");
                    datos[1] = Integer.toString(total);

                     modelo16.addRow(datos);
                   
                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                }
                 break;

                case 17:
                //CONSULTA 18
                 DefaultTableModel modelo17 = new DefaultTableModel();
                modelo17.addColumn("Nombre");
                modelo17.addColumn("Calle");
                modelo17.addColumn("Numero");
                modelo17.addColumn("CodPostal");
                modelo17.addColumn("Ciudad");
                modelo17.addColumn("Provinvia");
                modelo17.addColumn("Peliculas Vistas");
                jTable1.setModel(modelo17);
                
                ResultSet rs19;
                try{
                  rs19 = st.executeQuery("select \"Usuarios\".nombre,\"Usuarios\".calle,\"Usuarios\".numero,\"Usuarios\".\"codPostal\",\n" +
                    "\"Usuarios\".ciudad,\"Usuarios\".provincia,count(\"Visiona\".id) as Peliculas_Vistas\n" +
                    "from \"Usuarios\",\"Visiona\", \"Peliculas\"  \n" +
                    "where  \"Usuarios\".\"Id\" = \"Visiona\".\"IdPerfil\" and \"Visiona\".id =\"Peliculas\".id_contenidos\n" +
                    "group by \"Usuarios\".nombre,\"Usuarios\".calle,\"Usuarios\".numero,\"Usuarios\".\"codPostal\",\n" +
                    "\"Usuarios\".ciudad,\"Usuarios\".provincia");

                String datos[] = new String[7];
                while(rs19.next()){

                    datos[0] = rs19.getString("nombre");//Coge la primera fila
                    datos[1] = rs19.getString("calle");
                    int numero = Integer.parseInt(rs19.getString("numero"));
                    datos[2]= Integer.toString(numero);
                    int codPostal = Integer.parseInt(rs19.getString("codPostal"));
                    datos[3]= Integer.toString(numero);
                    datos[4] = rs19.getString("ciudad");
                    datos[5] = rs19.getString("provincia");
                    int total = rs19.getInt("Peliculas_Vistas");
                    datos[6]= Integer.toString(numero);

                    modelo17.addRow(datos);
                    
                  
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                }
                
                break;
                case 18: //CONSULTA 19
                
                DefaultTableModel modelo18 = new DefaultTableModel();
                modelo18.addColumn("Nombre");
                modelo18.addColumn("Calle");
                modelo18.addColumn("Numero");
                modelo18.addColumn("CodPostal");
                modelo18.addColumn("Ciudad");
                modelo18.addColumn("Provinvia");
                modelo18.addColumn("Series Vistas");
                jTable1.setModel(modelo18);

                ResultSet rs20;
                try{
                    rs20 = st.executeQuery("select \"Usuarios\".nombre,\"Usuarios\".calle,\"Usuarios\".numero,\"Usuarios\".\"codPostal\",\n" +
                    "\"Usuarios\".ciudad,\"Usuarios\".provincia,count(\"Visiona\".id) as Series_Vistas\n" +
                    "from \"Usuarios\",\"Visiona\", \"Capitulos\"  \n" +
                    "where  \"Usuarios\".\"Id\" = \"Visiona\".\"IdPerfil\" and \"Visiona\".id =\"Capitulos\".id_contenidos\n" +
                    "group by \"Usuarios\".nombre,\"Usuarios\".calle,\"Usuarios\".numero,\"Usuarios\".\"codPostal\",\n" +
                    "\"Usuarios\".ciudad,\"Usuarios\".provincia,\"Visiona\".id");

               String datos[] = new String[7];
                while(rs20.next()){

                    datos[0] = rs20.getString("nombre");
                    datos[1] = rs20.getString("calle");
                    int numero = Integer.parseInt(rs20.getString("numero"));
                    datos[2]= Integer.toString(numero);
                    int codPostal = Integer.parseInt(rs20.getString("codPostal"));
                    datos[3] = Integer.toString(codPostal);
                    datos[4] = rs20.getString("ciudad");
                    datos[5] = rs20.getString("provincia");
                    int total = rs20.getInt("Series_Vistas");
                    datos[6] = Integer.toString(total);

                   modelo18.addRow(datos);
                   
                
                    
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                }
                
                 break;
                case 19:
                //CONSULTA 20
                DefaultTableModel modelo19 = new DefaultTableModel();
                modelo19.addColumn("Titulo");
           
                jTable1.setModel(modelo19);
                    

                ResultSet rs21;
                try{
                    rs21 = st.executeQuery("select \"Contenidos\".titulo\n" +
                    "from \"Contenidos\",\"Visiona\"\n" +
                    "where  \"Contenidos\".id_contenidos  NOT in  (select id	\n" +
                    "from \"Visiona\")\n" +
                    "group by \"Contenidos\".titulo ");

               String datos[] = new String[1];
                while(rs21.next()){

                   datos[0] = rs21.getString("titulo");

                    modelo19.addRow(datos);
                    
                
                }}catch(Exception e){
                        System.out.println(e.getMessage());
                }
                
                break;
            }
            
            connection.close();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Consulta no disponible");
            this.dispose();       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
  
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxOpcion;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelCorreo;
    private javax.swing.JLabel labelSubTitulo;
    private javax.swing.JLabel labelSubTitulo1;
    // End of variables declaration//GEN-END:variables
}
